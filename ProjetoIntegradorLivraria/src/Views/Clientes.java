/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Views;

import Controller.ClienteController;
import Models.Cliente;
import java.sql.Connection;
import java.sql.Statement;
import javax.swing.JOptionPane;
import java.awt.event.KeyEvent;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author joaom
 */
public class Clientes extends javax.swing.JFrame {

    public Connection con;
    public Statement st;
    public ResultSet resultado;

    /**
     * Creates new form Telas
     */
    public Clientes() {
        initComponents();
        lblObrigatorioNome.setVisible(false);
        lblObrigatorioCPF.setVisible(false);
        lblObrigatorioEmail.setVisible(false);
        lblObrigatorioEndereco.setVisible(false);
        lblObrigatorioSexo.setVisible(false);
        jrdMasculino.setActionCommand("M");
        jrdFeminino.setActionCommand("F");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        GroupSexo = new javax.swing.ButtonGroup();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        lblCPF1 = new javax.swing.JLabel();
        txtCPF1 = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblClientes = new javax.swing.JTable();
        btnPesquisar = new javax.swing.JButton();
        btnExcluir = new javax.swing.JButton();
        btnEditar = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        lblNome = new javax.swing.JLabel();
        lblEndereco = new javax.swing.JLabel();
        lblEmail = new javax.swing.JLabel();
        lblTelefone = new javax.swing.JLabel();
        lblSexo = new javax.swing.JLabel();
        lblCPF = new javax.swing.JLabel();
        txtNome = new javax.swing.JTextField();
        txtEndereco = new javax.swing.JTextField();
        txtEmail = new javax.swing.JTextField();
        txtTelefone = new javax.swing.JTextField();
        jrdMasculino = new javax.swing.JRadioButton();
        jrdFeminino = new javax.swing.JRadioButton();
        lblEstadoCivil = new javax.swing.JLabel();
        cboEstadoCivil = new javax.swing.JComboBox<>();
        lblDataNascimento = new javax.swing.JLabel();
        lblObrigatorioNome = new javax.swing.JLabel();
        lblObrigatorioEndereco = new javax.swing.JLabel();
        lblObrigatorioSexo = new javax.swing.JLabel();
        lblObrigatorioCPF = new javax.swing.JLabel();
        lblObrigatorioEmail = new javax.swing.JLabel();
        btnCadastrar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        txtCPF = new javax.swing.JTextField();
        btnLimpar = new javax.swing.JButton();
        jdcNascimento = new com.toedter.calendar.JDateChooser();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Cadastro de clientes");
        setResizable(false);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Pesquisa de Cliente", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 13))); // NOI18N

        lblCPF1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblCPF1.setText("CPF:");

        txtCPF1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtCPF1.setNextFocusableComponent(lblNome);

        tblClientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "CPF", "Nome", "Sexo", "Nascimento", "Estado Civil", "Telefone", "Endereço", "Email"
            }
        ));
        jScrollPane1.setViewportView(tblClientes);

        btnPesquisar.setText("Pesquisar");
        btnPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPesquisarActionPerformed(evt);
            }
        });

        btnExcluir.setText("Excluir Cliente");
        btnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirActionPerformed(evt);
            }
        });

        btnEditar.setText("Editar Cliente");
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(369, 369, 369)
                        .addComponent(lblCPF1)
                        .addGap(18, 18, 18)
                        .addComponent(txtCPF1, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(btnPesquisar)
                        .addGap(0, 387, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(btnEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(64, 64, 64)
                .addComponent(btnExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(375, 375, 375))
        );

        jPanel2Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnEditar, btnExcluir});

        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCPF1)
                    .addComponent(txtCPF1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnPesquisar))
                .addGap(40, 40, 40)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(61, Short.MAX_VALUE))
        );

        jPanel2Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnEditar, btnExcluir});

        jTabbedPane1.addTab("Pesquisa de Cliente", jPanel2);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Cadastro de cliente", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 13))); // NOI18N
        jPanel1.setPreferredSize(new java.awt.Dimension(1100, 426));
        jPanel1.setLayout(null);

        lblNome.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblNome.setText("Nome:");
        lblNome.setNextFocusableComponent(txtNome);
        jPanel1.add(lblNome);
        lblNome.setBounds(388, 54, 46, 17);

        lblEndereco.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblEndereco.setText("Endereço:");
        jPanel1.add(lblEndereco);
        lblEndereco.setBounds(364, 200, 70, 17);

        lblEmail.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblEmail.setText("E-mail:");
        lblEmail.setNextFocusableComponent(txtEmail);
        jPanel1.add(lblEmail);
        lblEmail.setBounds(387, 90, 47, 17);

        lblTelefone.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblTelefone.setText("Telefone:");
        jPanel1.add(lblTelefone);
        lblTelefone.setBounds(370, 236, 64, 17);

        lblSexo.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblSexo.setText("Sexo:");
        jPanel1.add(lblSexo);
        lblSexo.setBounds(395, 277, 39, 17);

        lblCPF.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblCPF.setText("CPF:");
        jPanel1.add(lblCPF);
        lblCPF.setBounds(402, 24, 32, 17);

        txtNome.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtNome.setNextFocusableComponent(lblEmail);
        txtNome.setPreferredSize(new java.awt.Dimension(20, 18));
        txtNome.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtNomeFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtNomeFocusLost(evt);
            }
        });
        jPanel1.add(txtNome);
        txtNome.setBounds(452, 54, 200, 18);

        txtEndereco.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtEndereco.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtEnderecoFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtEnderecoFocusLost(evt);
            }
        });
        jPanel1.add(txtEndereco);
        txtEndereco.setBounds(452, 200, 200, 18);

        txtEmail.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtEmail.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtEmailFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtEmailFocusLost(evt);
            }
        });
        jPanel1.add(txtEmail);
        txtEmail.setBounds(452, 90, 200, 18);

        txtTelefone.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel1.add(txtTelefone);
        txtTelefone.setBounds(452, 236, 200, 18);

        GroupSexo.add(jrdMasculino);
        jrdMasculino.setText("Masculino");
        jrdMasculino.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrdMasculinoActionPerformed(evt);
            }
        });
        jPanel1.add(jrdMasculino);
        jrdMasculino.setBounds(452, 272, 90, 28);

        GroupSexo.add(jrdFeminino);
        jrdFeminino.setText("Feminino");
        jrdFeminino.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrdFemininoActionPerformed(evt);
            }
        });
        jPanel1.add(jrdFeminino);
        jrdFeminino.setBounds(560, 272, 83, 28);

        lblEstadoCivil.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblEstadoCivil.setText("Estado Civil:");
        jPanel1.add(lblEstadoCivil);
        lblEstadoCivil.setBounds(350, 135, 84, 17);

        cboEstadoCivil.setEditable(true);
        cboEstadoCivil.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecione", "Solteiro(a)", "Casado(a)", "Divrciado(a)", "Viuvo(a)" }));
        cboEstadoCivil.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel1.add(cboEstadoCivil);
        cboEstadoCivil.setBounds(452, 126, 200, 26);

        lblDataNascimento.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblDataNascimento.setText("Data de Nascimento:");
        jPanel1.add(lblDataNascimento);
        lblDataNascimento.setBounds(291, 170, 143, 17);

        lblObrigatorioNome.setForeground(new java.awt.Color(255, 0, 0));
        lblObrigatorioNome.setText("*campo obrigatório");
        jPanel1.add(lblObrigatorioNome);
        lblObrigatorioNome.setBounds(670, 55, 109, 16);

        lblObrigatorioEndereco.setForeground(new java.awt.Color(255, 0, 0));
        lblObrigatorioEndereco.setText("*campo obrigatório");
        jPanel1.add(lblObrigatorioEndereco);
        lblObrigatorioEndereco.setBounds(670, 201, 109, 16);

        lblObrigatorioSexo.setForeground(new java.awt.Color(255, 0, 0));
        lblObrigatorioSexo.setText("*campo obrigatório");
        jPanel1.add(lblObrigatorioSexo);
        lblObrigatorioSexo.setBounds(670, 278, 109, 16);

        lblObrigatorioCPF.setForeground(new java.awt.Color(255, 0, 0));
        lblObrigatorioCPF.setText("*campo obrigatório");
        jPanel1.add(lblObrigatorioCPF);
        lblObrigatorioCPF.setBounds(658, 25, 109, 16);

        lblObrigatorioEmail.setForeground(new java.awt.Color(255, 0, 0));
        lblObrigatorioEmail.setText("*campo obrigatório");
        jPanel1.add(lblObrigatorioEmail);
        lblObrigatorioEmail.setBounds(670, 91, 109, 16);

        btnCadastrar.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        btnCadastrar.setText("Cadastrar");
        btnCadastrar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnCadastrarMousePressed(evt);
            }
        });
        btnCadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCadastrarActionPerformed(evt);
            }
        });
        jPanel1.add(btnCadastrar);
        btnCadastrar.setBounds(344, 410, 125, 32);

        btnCancelar.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });
        jPanel1.add(btnCancelar);
        btnCancelar.setBounds(591, 410, 125, 32);

        txtCPF.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtCPF.setNextFocusableComponent(lblNome);
        txtCPF.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtCPFFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtCPFFocusLost(evt);
            }
        });
        txtCPF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCPFKeyTyped(evt);
            }
        });
        jPanel1.add(txtCPF);
        txtCPF.setBounds(452, 24, 200, 18);

        btnLimpar.setText("Limpar dados");
        btnLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimparActionPerformed(evt);
            }
        });
        jPanel1.add(btnLimpar);
        btnLimpar.setBounds(470, 350, 108, 32);

        jdcNascimento.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel1.add(jdcNascimento);
        jdcNascimento.setBounds(450, 169, 250, 20);

        jTabbedPane1.addTab("Cadastro de Cliente", jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        // TODO add your handling code here:
        txtEmail.setText("");
        lblObrigatorioEmail.setVisible(false);

        txtNome.setText("");
        lblObrigatorioNome.setVisible(false);

        txtCPF.setText("");
        lblObrigatorioCPF.setVisible(false);

        txtEndereco.setText("");
        lblObrigatorioEndereco.setVisible(false);

        txtTelefone.setText("");
        jrdFeminino.setSelected(false);
        jrdMasculino.setSelected(false);

        //fmtNascimento.setText("");
        cboEstadoCivil.setSelectedIndex(0);

        jrdFeminino.setSelected(false);
        jrdMasculino.setSelected(false);

    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnCadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCadastrarActionPerformed
        // TODO add your handling code here:       
        String cpf = txtCPF.getText();
        String nome = txtNome.getText();
        Date data_nascimento = jdcNascimento.getDate();
        String email = txtEmail.getText();
        String endereco = txtEndereco.getText();
        String estado_civil = cboEstadoCivil.getSelectedItem().toString();
        String sexo = GroupSexo.getSelection().getActionCommand().toString();
        String telefone = txtTelefone.getText();

        boolean retorno = ClienteController.Salvar(cpf, nome, data_nascimento, email, endereco, estado_civil, sexo, telefone);

        if (retorno) {
            JOptionPane.showMessageDialog(null, "Cliente cadastrado com sucesso", "Cadastro realizado", JOptionPane.INFORMATION_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(null, "Falha no cadastro do Cliente!", "Falha", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_btnCadastrarActionPerformed

    private void txtCPFFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCPFFocusLost
        // TODO add your handling code here:

//        Models.Cliente novoCliente = new Cliente();
//        boolean eValido;
//
//        if (txtCPF.getText().length() != 11 || txtCPF.getText().trim().equals("")) {
//            txtCPF.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 0, 0)));
//            lblObrigatorioCPF.setVisible(true);
//            JOptionPane.showMessageDialog(this, "Campo CPF é obrigatório e possui 11 números");
//            txtCPF.requestFocus(true);
//        } else {
//            try {
//                con = DriverManager.getConnection("jdbc:mysql://localhost:3306/livraria", "root", "");
//                st = (Statement) con.createStatement();
//
//                String linhaPesq = "select * from cliente where cpf = " + txtCPF.getText();
//                resultado = st.executeQuery(linhaPesq);
//
//                if (resultado.next()) {
//                    JOptionPane.showMessageDialog(this, "Cliente já cadastrado");
//                    txtNome.setText(resultado.getString("nome"));
//                    //fmtNascimento.setText(resultado.getString("dt_nascimento").replace("-", "/"));
//                    if (resultado.getString("sexo").equals("M")) {
//                        jrdMasculino.setSelected(true);
//                    } else {
//                        jrdFeminino.setSelected(true);
//                    }
//                    cboEstadoCivil.setSelectedItem(resultado.getString("estado_civil"));
//                    txtTelefone.setText(resultado.getString("telefone"));
//                    txtEndereco.setText(resultado.getString("endereco"));
//                    txtEmail.setText(resultado.getString("email"));
//                }
//                st.close();
//            } catch (Exception e) {
//                System.out.println("Error " + e.getMessage());
//            }
//        }
//
//        eValido = novoCliente.isValid(txtCPF.getText());
//
//        if (!eValido) {
//            JOptionPane.showMessageDialog(this, "CPF inválido!");
//        }

    }//GEN-LAST:event_txtCPFFocusLost

    private void txtCPFKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCPFKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();

        if (((c < '0') || (c > '9')) && (c != KeyEvent.VK_BACK_SPACE)) {
            evt.consume();
        }
    }//GEN-LAST:event_txtCPFKeyTyped

    private void txtCPFFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCPFFocusGained
        // TODO add your handling code here:
        txtCPF.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        lblObrigatorioCPF.setVisible(false);
    }//GEN-LAST:event_txtCPFFocusGained

    private void txtNomeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNomeFocusLost
        // TODO add your handling code here:

        if (txtNome.getText().trim().equals("")) {
            txtNome.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 0, 0)));
            lblObrigatorioNome.setVisible(true);
            JOptionPane.showMessageDialog(this, "Campo NOME é obrigatório");
            txtNome.requestFocus(true);
        }
    }//GEN-LAST:event_txtNomeFocusLost

    private void txtNomeFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNomeFocusGained
        // TODO add your handling code here:
        txtNome.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        lblObrigatorioNome.setVisible(false);
    }//GEN-LAST:event_txtNomeFocusGained

    private void txtEmailFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtEmailFocusLost
        // TODO add your handling code here:

        String user = txtEmail.getText().substring(0, txtEmail.getText().indexOf("@") + 1);
        String domain = txtEmail.getText().substring(txtEmail.getText().indexOf("@") + 1, txtEmail.getText().length());

        if (txtEmail.getText().trim().equals("")) {
            txtEmail.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 0, 0)));
            lblObrigatorioEmail.setVisible(true);
            JOptionPane.showMessageDialog(this, "Campo EMAIL é obrigatório");
            txtEmail.requestFocus(true);
        } else if (!(user.contains("@")) && !(domain.contains("."))) {
            txtEmail.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 0, 0)));
            lblObrigatorioEmail.setVisible(true);
            JOptionPane.showMessageDialog(this, "Email inválido.\n Seu e-mail deve conter '@yourdomain.com'");
            txtEmail.requestFocus(true);
        }
    }//GEN-LAST:event_txtEmailFocusLost

    private void txtEmailFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtEmailFocusGained
        // TODO add your handling code here:
        txtEmail.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        lblObrigatorioEmail.setVisible(false);
    }//GEN-LAST:event_txtEmailFocusGained

    private void txtEnderecoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtEnderecoFocusLost
        // TODO add your handling code here:
        if (txtEndereco.getText().trim().equals("")) {
            txtEndereco.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 0, 0)));
            lblObrigatorioEndereco.setVisible(true);
            JOptionPane.showMessageDialog(this, "Campo ENDEREÇO é obrigatório");
            txtEndereco.requestFocus(true);
        }
    }//GEN-LAST:event_txtEnderecoFocusLost

    private void txtEnderecoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtEnderecoFocusGained
        // TODO add your handling code here:
        txtEndereco.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        lblObrigatorioEndereco.setVisible(false);
    }//GEN-LAST:event_txtEnderecoFocusGained

    private void btnCadastrarMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCadastrarMousePressed
        // TODO add your handling code here:
        try {
            String radioButtons = GroupSexo.getSelection().getActionCommand();
        } catch (Exception e) {
            lblObrigatorioSexo.setVisible(true);
            JOptionPane.showMessageDialog(this, "É necessário escolher um SEXO.");
        }
    }//GEN-LAST:event_btnCadastrarMousePressed

    private void jrdMasculinoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrdMasculinoActionPerformed
        // TODO add your handling code here:
        lblObrigatorioSexo.setVisible(false);
    }//GEN-LAST:event_jrdMasculinoActionPerformed

    private void jrdFemininoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrdFemininoActionPerformed
        // TODO add your handling code here:
        lblObrigatorioSexo.setVisible(false);
    }//GEN-LAST:event_jrdFemininoActionPerformed

    private void btnPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPesquisarActionPerformed
        // TODO add your handling code here:
        String cpf = txtCPF1.getText();

        ArrayList<Cliente> listaCliente = ClienteController.Consultar(cpf);

        DefaultTableModel tmCliente = new DefaultTableModel();
        tmCliente.addColumn("CPF");
        tmCliente.addColumn("Nome");
        tmCliente.addColumn("Sexo");
        tmCliente.addColumn("Nascimento");
        tmCliente.addColumn("Estado Civil");
        tmCliente.addColumn("Telefone");
        tmCliente.addColumn("Endereço");
        tmCliente.addColumn("Email");

        tblClientes.setModel(tmCliente);

        // teste de commit
        tmCliente.setRowCount(0);

        for (Cliente c : listaCliente) {
            DateFormat formatar = new SimpleDateFormat("dd/MM/yyyy");
            String data_nascimento = formatar.format(c.getData_de_nascimento());

            tmCliente.addRow(new Object[]{
                c.getCpf(),
                c.getNome(),
                c.getSexo(),
                data_nascimento,
                c.getEstado_civil(),
                c.getTelefone(),
                c.getEndereço(),
                c.getEmail()
            });
        }
    }//GEN-LAST:event_btnPesquisarActionPerformed

    private void btnExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirActionPerformed
        // TODO add your handling code here:
        if (tblClientes.getRowCount() > 0) {
            int linha = tblClientes.getSelectedRow();

            String cpf = tblClientes.getModel().getValueAt(linha, 0).toString();

            boolean retorno = ClienteController.Excluir(cpf);
            if (retorno) {
                JOptionPane.showMessageDialog(null, "Cliente deletado com sucesso!");
            } else {
                JOptionPane.showMessageDialog(null, "Falha ao deletar!");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Escolha um item da lista.");
        }
    }//GEN-LAST:event_btnExcluirActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        // TODO add your handling code here:

        if (tblClientes.getSelectedRowCount() > 0) {
            int linha = tblClientes.getSelectedRow();

            String cpf = tblClientes.getModel().getValueAt(linha, 0).toString();
            String nome = tblClientes.getModel().getValueAt(linha, 1).toString();
            String sexo = tblClientes.getModel().getValueAt(linha, 2).toString();

            Date nascimento = null;

            try {
                DateFormat format = new SimpleDateFormat("dd/MM/yyyy");
                nascimento = format.parse(tblClientes.getModel().getValueAt(linha, 3).toString());
            } catch (Exception e) {
                System.out.println(e.getMessage());
            }

            String estado_civil = tblClientes.getModel().getValueAt(linha, 4).toString();
            String telefone = tblClientes.getModel().getValueAt(linha, 5).toString();
            String endereco = tblClientes.getModel().getValueAt(linha, 6).toString();
            String email = tblClientes.getModel().getValueAt(linha, 7).toString();

            boolean retorno = ClienteController.Atualizar(
                    cpf,
                    nome,
                    sexo,
                    nascimento,
                    estado_civil,
                    telefone,
                    endereco,
                    email
            );

            if (retorno) {
                JOptionPane.showMessageDialog(null, "Cliente atualizado com sucesso.");
            } else {
                JOptionPane.showMessageDialog(null, "Cliente não foi atualizado.");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Escolha um cliente da lista");
        }


    }//GEN-LAST:event_btnEditarActionPerformed

    private void btnLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimparActionPerformed
        // TODO add your handling code here:

        Date data_nascimento = jdcNascimento.getDate();

        txtCPF.setText("");
        txtNome.setText("");
        txtEmail.setText("");
        txtEndereco.setText("");
        txtTelefone.setText("");
        //fmtNascimento.setText("");
        cboEstadoCivil.setSelectedIndex(0);

    }//GEN-LAST:event_btnLimparActionPerformed

    public void carregarTabela() {
//        ArrayList<Cliente> listaClientes = ClienteDAO.consultarClientes();
//        
//       
//        DefaultTableModel tmClientes = new DefaultTableModel();
//        tmClientes.addColumn("ID");
//        tmClientes.addColumn("Nome");
//        tmClientes.addColumn("CPF");
//        
//        //Defina sua estrutura com a estrutura tmClientes;
//        tblClientes.setModel(tmClientes);
//        
//        //Removo a coluna ID da View (JTable) mas mantenho na model para armazenar o ID
//        //tblClientes.removeColumn(tblClientes.getColumnModel().getColumn(0));
//        
//        //Limpo a tabela, excluindo todas as linhas para depois mostrar os dados novamente
//        tmClientes.setRowCount(0);
//        
//        //Para cada cliente resgatado do banco de dados, atualizo a tabela
////        for(int i=0;i<listaClientes.size();i++){
////            Cliente objCliente = new Cliente();
////            objCliente =  (Cliente)listaClientes.get(i);
////            objCliente.setId(objCliente.getId());
////            
////            tmClientes.addRow(new Object[]{objCliente.getId(),objCliente.getNome(),objCliente.getCPF()});
////        }
//        
//        for (Cliente c : listaClientes) {
//            tmClientes.addRow(new Object[]{c.getId(),c.getNome(),c.getCpf()});
//        }
//        
//        //Defino o tamanho para cada coluna
//        tblClientes.getColumnModel().getColumn(0).setPreferredWidth(50); //ID
//        tblClientes.getColumnModel().getColumn(1).setPreferredWidth(300); // Nome
//        tblClientes.getColumnModel().getColumn(2).setPreferredWidth(100); //CPF
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Clientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Clientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Clientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Clientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Clientes().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup GroupSexo;
    private javax.swing.JButton btnCadastrar;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnExcluir;
    private javax.swing.JButton btnLimpar;
    private javax.swing.JButton btnPesquisar;
    private javax.swing.JComboBox<String> cboEstadoCivil;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private com.toedter.calendar.JDateChooser jdcNascimento;
    private javax.swing.JRadioButton jrdFeminino;
    private javax.swing.JRadioButton jrdMasculino;
    private javax.swing.JLabel lblCPF;
    private javax.swing.JLabel lblCPF1;
    private javax.swing.JLabel lblDataNascimento;
    private javax.swing.JLabel lblEmail;
    private javax.swing.JLabel lblEndereco;
    private javax.swing.JLabel lblEstadoCivil;
    private javax.swing.JLabel lblNome;
    private javax.swing.JLabel lblObrigatorioCPF;
    private javax.swing.JLabel lblObrigatorioEmail;
    private javax.swing.JLabel lblObrigatorioEndereco;
    private javax.swing.JLabel lblObrigatorioNome;
    private javax.swing.JLabel lblObrigatorioSexo;
    private javax.swing.JLabel lblSexo;
    private javax.swing.JLabel lblTelefone;
    private javax.swing.JTable tblClientes;
    private javax.swing.JTextField txtCPF;
    private javax.swing.JTextField txtCPF1;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtEndereco;
    private javax.swing.JTextField txtNome;
    private javax.swing.JTextField txtTelefone;
    // End of variables declaration//GEN-END:variables
}
